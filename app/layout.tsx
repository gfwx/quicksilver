import type { Metadata } from 'next';
import { Inter } from 'next/font/google';
import { cookies } from 'next/headers';
import './globals.css';
const inter = Inter({ subsets: ['latin'] });
import { AuthProvider } from '@/lib/contexts/AuthContext';
const serverUrl = process.env.NEXT_PUBLIC_EXPRESS_SERVER_PATH

export const metadata: Metadata = {
  title: 'Quicksilver',
  // description: 'Generated by create next app',
};

export default async function RootLayout({ children }: { children: React.ReactNode }) {
  let user = null;

  try {
    // Get cookies from the incoming request
    const cookieStore = await cookies();
    const sessionCookie = cookieStore.get('wos-session')?.value;

    // Only make the API call if we have a session cookie
    if (sessionCookie) {
      const response = await fetch(`${serverUrl}/api/user/me`, {
        method: 'GET',
        headers: {
          'Content-Type': 'application/json',
          // Forward the cookie manually
          'Cookie': `wos-session=${sessionCookie}`
        }
      });

      if (response.ok) {
        const userData = await response.json();
        console.log(userData);
        user = userData.user;
      }
    }
  } catch (error) {
    console.error('Failed to fetch user on server:', error);
    // user remains null, which is handled gracefully
  }

  return (
    <>
      <html lang="en" suppressHydrationWarning>
        <body className={inter.className}>
          <AuthProvider user={user}>
            {children}
          </AuthProvider>
        </body>
      </html>
    </>
  );
}
